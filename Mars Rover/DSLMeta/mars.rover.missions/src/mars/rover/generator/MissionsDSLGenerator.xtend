/*
 * generated by Xtext 2.12.0
 */
package mars.rover.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import mars.rover.missionsDSL.Robot

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MissionsDSLGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
	val root = resource.allContents.head as Robot;
		if (root !== null) {
			var masterPath = "master/";
			fsa.generateFile(masterPath+"common.cpp", AppGenerator.commonCpp());
			fsa.generateFile(masterPath+"common.h", AppGenerator.commonHeader());
			fsa.generateFile(masterPath+"app.cpp", MasterGenerator.toCpp(root));
			fsa.generateFile(masterPath+"app.h", MasterGenerator.toHeader(root));
			fsa.generateFile(masterPath+"app.cfg", AppGenerator.toCfg(root));
			fsa.generateFile(masterPath+"Makefile.inc", MakefileGenerator.toMake(root));
			
			var slavePath = "slave/";
			fsa.generateFile(slavePath+"common.cpp", AppGenerator.commonCpp());
			fsa.generateFile(slavePath+"common.h", AppGenerator.commonHeader());
			fsa.generateFile(slavePath+"app.cpp", SlaveGenerator.toCpp(root));
			fsa.generateFile(slavePath+"app.h", SlaveGenerator.toHeader(root));
			fsa.generateFile(slavePath+"app.cfg", AppGenerator.toCfg(root));
			fsa.generateFile(slavePath+"Makefile.inc", MakefileGenerator.toMake(root));
		} 
	}
	
}
