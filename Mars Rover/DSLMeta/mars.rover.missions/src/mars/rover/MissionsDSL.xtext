grammar mars.rover.MissionsDSL with org.eclipse.xtext.common.Terminals

generate missionsDSL "http://www.rover.mars/MissionsDSL"

Robot: 
	"SlaveAddress:" slaveAddress = MAC
	("SensorRefreshRate:" refreshRate = Duration)? 
	"DefaultSpeed:" defaultSpeed = INT
	"SlowSpeed:" slowSpeed = INT
	"RotationRange:" minAngle = INT "to"  maxAngle = INT "degrees" 
	"StartMissions:" startMissions += [Mission]+
	availableMissions += Mission+
;

Mission: "Mission" name=ID "priority" priority = INT
	(
		type = MissionType cond += Condition+ 'ifHappens' actions += Action* ("start" newMissions += [Mission]+)?			|
		type = MissionType actCond += ActfulCondition+ 'whenDone' actons += Action* ("start" newMissions += [Mission]+)?			
	)
;

// Wrapper values. We need these to allow nullable types

Duration:
	value = INT "ms"
;

Integer:
	value = INT
;

Color:
	value = EV3_COLOR
;

Boolean:
	value = BOOL
;

terminal MAC:
	('a'..'f'|'A'..'F'|'0'..'9')('a'..'f'|'A'..'F'|'0'..'9')(':')
	('a'..'f'|'A'..'F'|'0'..'9')('a'..'f'|'A'..'F'|'0'..'9')(':')
	('a'..'f'|'A'..'F'|'0'..'9')('a'..'f'|'A'..'F'|'0'..'9')(':')
	('a'..'f'|'A'..'F'|'0'..'9')('a'..'f'|'A'..'F'|'0'..'9')(':')
	('a'..'f'|'A'..'F'|'0'..'9')('a'..'f'|'A'..'F'|'0'..'9')(':')
	('a'..'f'|'A'..'F'|'0'..'9')('a'..'f'|'A'..'F'|'0'..'9')
;

enum MissionType:
	AVOID = 						  "avoid"	|
	SEEK_FOREVER =       		   "seek"   |
	FIND = 						   "find"	|
	FINDINORDER = 			"findInOrder"	|
	FINDSIMULTANEOUS = "findSimultaneous"	
;

Condition:
	sensor = Sensor 
	(relation = Relation)?
	value = (Value)?
;

ActfulCondition:
	cond = Condition
	('then' actions += Action+)?
;

enum Sensor:
	color = "color"					|
	backProximity = "backProximity"	|
	frontProximity = "frontProximity"|
	touch = "touch"
;

enum Relation:
	EQ = "EQ"	|
	LT = "LT"	|
	LE = "LE"	|
	GT = "GT"	|
	GE = "GE"
;

Value:
	color = Color	    |
	integer = Integer	|
	bool = Boolean
;

terminal BOOL:
	'true' | 'false'
;

Action:
	action = EV3_ACTION (value = Integer)? ("for" duration = Duration)?	
;

enum EV3_ACTION:
	STOP = "stop"		|
	REVERSE = "reverse" 	|
	PLAY = "play" 		|
	ROTATE = "rotate"	|
	HALT = "halt"		|
	MEASURE = "measure" |
	MOVE = "move"
	// TODO: LED Colors
;

enum EV3_COLOR:
	BLACK = "black"		|
	BLUE = "blue" 		|
	GREEN = "green"		|
	YELLOW = "yellow"	|
	RED = "red" 			|
	WHITE = "white"		|
	BROWN = "brown"
;